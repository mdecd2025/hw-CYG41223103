var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站: https://mdecd2025.github.io/hw-CYG41223103 \n 學員作業倉儲: https://github.com/mdecd2025/hw-CYG41223103 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Tasks', 'text': '', 'tags': '', 'url': 'Tasks.html'}, {'title': 'Task2', 'text': '', 'tags': '', 'url': 'Task2.html'}, {'title': 'W3', 'text': '列出 2a 學員作業網站與倉儲連結 \n 列出 2b 學員作業網站與倉儲連結 \n 列出 2a 分組網站與倉儲連結 \n 列出 2b 分組網站與倉儲連結 \n \n 請列出各組目前尚未納入分組的學員名單 \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n # 用來顯示未分組的學員\ndef display_unassigned_members(url):\n    # 讀取檔案中的學員資料\n    data = open(url).readlines()\n\n    # 篩選出有效資料（跳過標題）\n    all_stud = data[1:]\n\n    # 找出尚未分組的學員，假設分組的學員在 github 帳號或學號中有某個特徵\n    unassigned_stud = []\n\n    for i in all_stud:\n        stud = i.split("\\t")\n        stud_num = stud[0]\n        github = stud[1]\n\n        # 假設如果學員的 github 帳號或學號為空，代表未分組\n        if not github or github.strip() == "":  # 假設空的帳號代表未分組\n            unassigned_stud.append((stud_num, github))\n\n    # 顯示未分組學員\n    brython_div1 = document["brython_div1"]\n    brython_div1 <= html.H2("尚未分組的學員")\n\n    count = 0\n    for stud_num, github in unassigned_stud:\n        count += 1\n        brython_div1 <= str(count) + ". " + html.A(str(stud_num), href="https://mdecd2025.github.io/hw-" + str(github) if github else "#")\n        brython_div1 <= " | " + html.A("repo", href="https://github.com/mdecd2025/hw-" + str(github) if github else "#")\n        brython_div1 <= html.BR()\n     \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n  程式執行 ouput 區  \n \n \xa0 \n', 'tags': '', 'url': 'W3.html'}, {'title': 'Task3', 'text': '使用 Solvespace 建立平面四連桿系統零組件 (HW2) \n', 'tags': '', 'url': 'Task3.html'}, {'title': 'Task5', 'text': '1. Webots介紹：Webots 是一款開源的機器人仿真軟體，提供了強大的圖形介面，幫助用戶創建和模擬各種機器人及其環境。用戶可以設計機器人、建立仿真環境、進行測試，並進行機器人程式設計，支援多種機器人及感測器模組。 \n 2.\xa0 重要單字與用法： Simulation (名詞)：指模擬過程，表示在虛擬環境中重現現實世界的情境。例子："robot simulation"（機器人模擬）。 Controller (名詞)：控制機器人行為的程式。例子："The robot controller is written in Python."（機器人的控制器是用 Python 編寫的）。 Environment (名詞)：機器人運行的虛擬或物理世界。例子："The environment can contain various objects."（該環境可以包含各種物體） \n 文法說明： Simulation：作為名詞，通常與動詞 "perform" 或 "create" 連用。例如 "perform a simulation"（進行模擬）或 "create a simulation"（創建模擬）。 Controller：在句中多用作主語或賓語，如 "is written"（被寫成）表示被動語態，突出程式本身而非編寫者。 Environment：通常用來表示場所或範圍，如 "the environment can contain"（環境可以包含），這是一種表示能力或可能性的句型，使用 "can" 表示可行或有可能的動作。 \n 3.\xa0 \n Webots is an open-source robot simulation software that allows users to create 3D virtual worlds with physical properties for testing different types of robots, such as wheeled, legged, or flying robots. It supports various sensors and actuators. Webots is widely used in academic research, education, and industries. It also allows transferring simulations to real robots, such as e-puck or Nao. The platform supports programming in multiple languages like C, C++, Python, Java, and MATLAB. \n For more details, visit the Webots Introduction. \n \n 4.\xa0 \n 重要單字與解釋： Open-source (形容詞)：開源的，指軟體源碼公開，允許用戶自由修改和分發。 \n 用法：在句中通常用來描述軟體的開放性，如 "Webots is an open-source robot simulation software." Simulation (名詞)：模擬，指用電腦創建的虛擬環境來重現現實世界情境。 \n 用法：例如 "robot simulation"（機器人模擬）描述模擬過程。 Actuators (名詞)：執行器，指機器人內部用於執行物理動作的裝置。 \n 用法：如 "supports various sensors and actuators"（支援各種感測器和執行器）中，表示 Webots 平台的功能。 Interface (名詞)：介面，指使兩個系統或裝置相互連接的界面。 \n 用法：例如 "Webots also allows transferring simulations to real robots"（Webots 也允許將模擬轉移到真實機器人），強調與實際機器人之間的連接。 \n 句子文法解釋： Open-source：用來描述 Webots 軟體的性質，指其是開放源碼的。 Simulation：作為名詞，與動詞 "create"（創建）或 "perform"（執行）搭配使用，表示模擬過程或操作。 Actuators：在句中作為名詞，表達 Webots 支援的硬體元件之一。 Interface：表示系統或工具間的連接方式，這裡強調了虛擬與真實機器人之間的連結。 \n \n 5. 建立場景： 1. ) 開啟 Webots，選擇 File > New World 來創建新場景。 2. ) 使用左側工具欄中的 Add Node 按鈕，將機器人或物體加入到場景中。 3. ) 配置機器人或物體的位置、大小和屬性。可使用 View 工具來查看場景的不同角度。 4. ) 為機器人設置控制器和感測器，確保其能夠進行所需的運作。 5.)保存場景並按 Run 按鈕進行測試。 \n 注意：確保每個元素的物理參數配置正確，並測試機器人的行為以確保其運行如預期。 \n 6. 手動建立場景： 1.)開啟 Webots，選擇“File” > “New World”來創建新的場景。 2.) 從左側選擇“Add Node”來添加不同的場景元素（如地面、障礙物、機器人等）。 3.) 根據需求調整機器人的參數，並設定所需的感測器。 4.) 最後保存並運行場景。 \n *注意要點：在創建過程中，確保每個元素正確配置（如機器人的動作、感測器的範圍等），並對場景進行測試。 \n', 'tags': '', 'url': 'Task5.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n \n 繪製link 1~3 \n  嵌入影片  \n \n 繪製base-1 \n \n 繪製bfourbar_linkage_design-1 \n     繪製shaft-1~2 \n     繪製fourbar_linkage_design_w_assembiy \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n :package:  下載 HW2.zip \n  嵌入影片  \n \n  嵌入影片  \n \n \n 繪製link 1~3 \n  嵌入影片  \n \n 繪製base-1 \n \n 繪製bfourbar_linkage_design-1 \n \n 繪製shaft-1~2 \n \n 繪製fourbar_linkage_design_w_assembiy \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n 📦  下載 Exam1.zip \n \n \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n \n \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Final_question', 'text': '\n \n 1. 本協同專案的目標與主要功能為何？ \n \n \n 模擬投籃遊戲，實現 youBot 輪車控制、投籃機構操作、籃框移動、補球、計分、顯示與鍵盤/自動操作整合。 \n \n \n 2. 場景中包含哪幾個主要子系統或模組？ \n \n \n \n 投籃輪車 (youBot) \n \n \n 投籃機構 \n \n \n 籃框架（stand） \n \n \n 籃球球體 \n \n \n 記分系統 \n \n \n 控制器（手動與自動） \n \n \n 補球系統 \n \n \n 傳輸通訊（Emitter/Receiver） \n \n \n \n 3. 如何在 Webots 中建立一個可移動的投籃輪車？ \n \n \n 插入 youBot → 加裝 RotationalMotor 控制四輪 → 安裝 HingeJoint 作為投籃關節 → 撰寫 controller 控制其移動與投籃。 \n \n \n 4. 籃框架的移動模式是如何設計與實現的？ \n \n \n 使用 Robot 類型或 Supervisor 控制，每個 timestep 隨機產生目標位置，透過 Position 設定實現慢速移動。 \n \n \n 5. 投籃輪車的移動控制與發射功能分別由哪些裝置組成？ \n \n \n \n 移動：RotationalMotor x4 + PositionSensor x4 \n \n \n 發射：HingeJoint + RotationalMotor + 距離/位置感測器 \n \n \n \n 6. 如何設定投籃輪車的初始位置與限制其活動範圍？ \n \n \n 於 .wbt 中設定 translation 和 rotation；於 controller 利用 GPS 判斷座標範圍，自動限制 youBot 不出界。 \n \n \n 7. 籃球如何於場景中建立、數量如何設定？ \n \n \n 使用 Solid 節點建立球體，設定 boundingObject、physics 等屬性。可複製多個、也可用 Supervisor 程式產生。 \n \n \n 8. 如何設計並實作籃球的補球或回收（送球）機構？ \n \n \n 設計送球軌道（滑槽）、機械手臂或轉盤，搭配 DistanceSensor 判斷 youBot 是否就緒，使用 Motor 控制送球。 \n \n \n 9. 投籃動作是如何由控制器程式觸發與執行的？ \n \n \n 按下鍵盤發射鍵後，控制投籃馬達將關節轉至發射角度→延遲→復位→冷卻時間→允許下一次發射。 \n \n \n 10. 操作者如何利用鍵盤控制輪車移動及投籃？ \n \n \n 透過 Webots 的 Keyboard.getKey()，定義如： \n \n \n \n W/A/S/D：前左後右 \n \n \n Q/E：旋轉 \n \n \n Space：投籃發射 \n \n \n \n 11. 投籃發射機構的關節與馬達如何配置與驅動？ \n \n \n 層層串接多個 HingeJoint，例如臂基→抬升臂→彈射臂，每節由 RotationalMotor 控制動作。 \n \n \n 12. 籃框架的隨機慢速移動是怎麼實現的？ \n \n \n 定時產生隨機座標範圍內的新目標位置，平滑插值方式控制位置，每 step 微調達成慢速移動。 \n \n \n 13. 記分板的設計邏輯是什麼？如何判斷得分？ \n \n \n 當球通過籃框下方感測器觸發→傳訊至記分控制器→改變七段顯示器顯示內容並加分。 \n \n \n 14. 籃球進框判斷使用了哪些感測器或演算法？ \n \n \n 使用 DistanceSensor、TouchSensor、或球通過框下光感（可為 DistanceSensor 检测短距離）來偵測命中。 \n \n \n 15. 投籃輪車與籃框架的碰撞設定如何調整？ \n \n \n 於各物件設定 boundingObject、質量、摩擦與 physics 屬性，調整接觸反應與彈跳效果。 \n \n \n 16. 籃框架的位置與運動狀態如何被記錄或顯示？ \n \n \n 可於 controller 中印出其 GPS 位置資訊，或寫入 log 檔案、顯示在場景的 overlay 上。 \n \n \n 17. 投籃次數與剩餘籃球數是如何統計與顯示的？ \n \n \n 在 controller 中紀錄變數，每次投籃或補球變更，並透過 7-segment 或 text overlay 顯示更新。 \n \n \n 18. 投籃遊戲結束條件的判定方式為何？ \n \n \n 可根據： \n \n \n \n 籃球耗盡 \n \n \n 投籃次數達上限 \n \n \n 時間倒數為零  當符合即結束遊戲並顯示結果。 \n \n \n \n 19. 如何設計多台輪車或多名操作者協同投籃？ \n \n \n 建立多個 youBot 節點，每個對應不同控制器與鍵盤映射，或透過訊息通訊協調投籃順序。 \n \n \n 20. 場景中各組件的物理屬性（質量、摩擦等）如何調整？ \n \n \n 在每個物件節點中的 physics 欄位設定 mass、friction, restitution 來調整物理效果。 \n \n \n 21. YouBot 機構的四輪配置與移動原理為何？ \n \n \n youBot 採用全向四輪，透過四個獨立馬達控制可前進、後退、側移與旋轉。透過輪速組合產生不同方向移動。 \n \n \n 22. 投籃機構的多關節設計與驅動邏輯？ \n \n \n 每個關節用一個 HingeJoint 搭配 RotationalMotor 控制，程式中定義各角度與時間順序，完成拋物線式投籃。 \n \n \n 23. 如何實現籃球補球機構的自動偵測與動作觸發？ \n \n \n 利用 DistanceSensor 偵測 youBot 有無接收球位置，搭配觸發開關（開合滑槽）或通訊協定（Receiver）傳球。 \n \n \n 24. 如何在 Webots 場景中顯示即時計分與剩餘球數？ \n \n \n 使用七段顯示器元件或 overlay 顯示文字，配合記分控制器即時更新分數與球數。 \n \n \n 25. 投籃過程動畫與物理真實性的平衡關鍵為何？ \n \n \n 需搭配關節速度、彈性係數、球質量與空氣阻力的參數設定，避免球彈性過大或不自然。 \n \n \n 26. 協同設計過程中，組員如何分工合作？ \n \n \n 一般可依：移動控制、投籃模組、補球設計、記分邏輯、場景建構、整合測試、報告撰寫各分工。 \n \n \n 27. 專案過程的影片、簡報與 PDF 報告應包含哪些重點？ \n \n \n \n 專案簡介 \n \n \n 系統設計圖 \n \n \n 控制邏輯流程圖 \n \n \n 模擬展示影片 \n \n \n 問題與解決 \n \n \n 成果展示 \n \n \n 分工與反思 \n \n \n \n 28. 如何將專案過程影片嵌入報告網頁？ \n \n \n 使用 \xa0 <iframe> \xa0 嵌入 YouTube 影片連結 \n \n \n 29. 若協同操作過程中發生衝突，如何協調與解決？ \n \n \n 透過開會討論、使用 Git 管理版本與衝突合併、確保各人負責模組明確分工與交接。 \n \n \n 30. 專案結束後，如何整理心得並反饋於課程平台？ \n \n \n 撰寫心得報告，包括學習點、挑戰、改進建議，並依照課程平台格式上傳。 \n \n \n 31. 請描述 youBot 投籃輪車在場景中的初始座標與朝向？ \n \n \n 於 .wbt 中設定 translation 為 [x y z]，rotation 為 [0 1 0 θ]，確保朝向籃框方向。 \n \n \n 32. 場景中的 youBot 投籃車和籃框架 stand 機器人各自的控制器名稱是什麼？ \n \n \n 例如： \n \n \n \n youBot：basket_bot_controller \n \n \n stand：basket_stand_controller \n \n \n \n 33. 如何在 Webots 場景檔案中正確設置每個 wheel 的 RotationalMotor 名稱？ \n \n \n 在 proto 內部或自定 robot 中命名，如：wheel1_motor、wheel2_motor，配合控制器取得裝置。 \n \n \n 34. 為什麼每個輪子旁邊都設有 PositionSensor？用途為何？ \n \n \n 用於即時監控輪速與位置，協助 PID 控制與定位調整，提高移動精度與防止打滑。 \n \n \n 35. 該如何利用 IMU 和 GPS 完成 youBot 的定點移動與旋轉？ \n \n \n 使用 GPS 判斷座標位置，IMU 判斷朝向角度。搭配 PID 控制計算需要行進與旋轉角。 \n \n \n 36. 如何設計 youBot 能夠精確側移指定距離？程式上如何判斷移動完成？ \n \n \n 設定目標座標→讀取 GPS 持續比對位置→達到誤差範圍內即完成側移。 \n \n \n 37. 是否試過讓 youBot 自動從起點移動到指定座標並朝向某點嗎？描述操作步驟。 \n \n \n 步驟： \n \n \n \n 確認起始 GPS \n \n \n 設定目標位置 \n \n \n 利用向量計算移動方向 \n \n \n 先旋轉朝向目標→再直線前進 \n \n \n 接近後微調角度 \n \n \n \n 38. 在控制器內，如何區分前進、後退、旋轉、側移等不同移動模式？ \n \n \n 根據四輪速度設計： \n \n \n \n 前進：[v v v v] \n \n \n 側移：[v -v -v v] \n \n \n 左轉：[-v v -v v] \n \n \n 右轉：[v -v v -v] \n \n \n \n 39. 在程式中 set_wheel_velocity 的四個參數順序分別對應哪四個輪子？ \n \n \n 一般順序為： \n \n \n \n front left \n \n \n front right \n \n \n rear left \n \n \n rear right  （需依模型結構驗證） \n \n \n \n 40. YouBot 的 Keyboard 控制有哪些特定按鍵操作？（請舉例說明） \n \n \n 例如： \n \n \n \n W：前進 \n \n \n S：後退 \n \n \n A：左移 \n \n \n D：右移 \n \n \n Q/E：旋轉 \n \n \n Space：投籃 \n \n \n \n 41. 投籃機構的多個 HingeJoint 關節是如何層層串接的？結構如何設計？ \n \n \n 上層為升降臂→中段轉動臂→末端彈射臂，各段接在前一段末端，形成多段關節串接結構。 \n \n \n 42. 如何觸發投籃發射動作？對應按鍵是什麼？程式流程為何？ \n \n \n 按鍵如 Space → 啟動 motor → 改變 HingeJoint 角度 → delay 後復位 → 加入 cooldown 時間。 \n \n \n 43. 籃框架 stand 的移動演算法是否有隨機性？該如何實現？ \n \n \n 有，可使用 random.uniform() 生成目標 x/y，搭配插值方式慢慢移動過去。 \n \n \n 44. 補球/送球機構自動補球的訊息傳遞流程是什麼？使用了哪些 Webots 裝置？ \n \n \n youBot 傳出 Emitter 訊息請求 → 補球機構 Receiver 接收 → 啟動 motor 傳送球體。 \n \n \n 45. Emitter/Receiver 在記分板與補球控制中扮演什麼角色？請詳細說明一個訊息傳遞範例。 \n \n \n 角色為：裝置之間通訊  例：youBot 發出「request_ball」→ 補球控制器接收後運作 motor 補球。 \n \n \n 46. 七段顯示器記分板的 segment 如何根據得分訊息動態變色？ \n \n \n 控制器內依照分數切換每段 segment 的 color 屬性或切換 visibility，更新數字。 \n \n \n 47. 投籃得分是根據哪個感測器資料來判斷？感測器設置於何處？ \n \n \n 通常設在籃框下方，使用 DistanceSensor 或 TouchSensor 感測籃球落下穿過點。 \n \n \n 48. 是否設計過球進框後自動加分的程式嗎？其邏輯為何？ \n \n \n 有：感測器觸發後→加分變數+1→更新顯示器數字→設定 cooldown 防止重複加分。 \n \n \n 49. 如何防止球體與場景物件發生非預期的穿透或異常彈跳？ \n \n \n \n 增加 physics timestep 精度 \n \n \n 調整球與框的 restitution 與 contact material \n \n \n 避免速度過快超出模擬解析度 \n \n \n \n 50. 請說明如何設定與調整球體和機械部件的質量、摩擦等物理參數。 \n \n \n 於每個 physics 節點設定 mass, friction, damping, restitution 屬性，調整至理想狀態。 \n \n \n 51. 是否試過多台 youBot 輪車同場協同投籃嗎？多機協同時，訊息或控制會有什麼衝突？ \n \n \n 需使用不同控制器與不同 Emitter/Receiver channel；若共用 channel 則需加上識別碼防止訊息混淆。 \n \n \n 52. 補球流程中如何確保每次只會有一顆球被正確補給到輪車？ \n \n \n 加入傳送冷卻時間、使用感測器檢查投籃台上是否已經有球再決定是否補球。 \n \n \n 53. 若希望依據剩餘球數或投籃次數動態結束遊戲，程式該如何編寫？ \n \n \n 在每次投籃後累計次數或減少剩餘球數，當條件達成（如次數上限或球用盡）→設定 flag 結束遊戲流程。 \n \n \n 54. 自動補球與自動投籃能否串接成完整循環？你如何設計流程與狀態管理？ \n \n \n 可以，狀態流程為：補球完成→等待→投籃→等待冷卻→補球→循環，使用 state machine 管理各步驟狀態。 \n \n \n 55. 場景中 Viewpoint 設定有何作用？你試過調整攝影機角度觀察不同視角嗎？ \n \n \n Viewpoint 可設定攝影機角度與位置，便於觀察模擬結果與 debug。可手動或程式內控制攝影機。 \n \n \n 56. 請描述該如何嵌入 YouTube 影片到個人或分組期末報告網頁？ \n \n \n 使用 \xa0 <iframe> \xa0 嵌入影片分享連結。 \n \n \n \n \n \n 57. 專案過程中曾遇到什麼協作或整合困難？如何解決？ \n \n \n \n 常見困難包括版本衝突、控制器耦合、參數不一致等。解決方式為：統一協議、分工明確、使用 Git 管理。 \n \n \n 58. 如何調整記分板七段顯示器 segment 的顏色及樣式？ \n \n \n 在每段 segment 中調整 appearance 或 material color，亦可依分數變化變色。 \n \n \n 59. 場景與控制器檔案如何在其他同組協同組員的電腦上執行？ \n \n \n 打包整個 Webots 專案資料夾（含 controllers、worlds、protos）並於 Webots 中開啟 .wbt 文件即可。 \n \n \n 60. 該如何驗證投籃流程、計分、補球、遊戲結束等每個功能都運作正常？ \n \n \n 逐項測試： \n \n \n \n 投球動作後球會發射 \n \n \n 球命中後記分板加分 \n \n \n 球不足後補球裝置送球 \n \n \n 達條件後畫面顯示「Game Over」 \n \n \n \n 61. 請自行於 Webots 場景新增或刪除一顆籃球？操作步驟為何？ \n \n \n 在 Scene Tree 右鍵→Add New Node→選擇 Solid→設為球形→命名為 basketball；要刪除則選球體右鍵→Delete. \n \n \n 62. 如何在場景中設定籃球的尺寸、顏色與物理屬性？ \n \n \n 設定 boundingObject 為球體→radius 控制尺寸；appearance 控制顏色；physics 中設質量、摩擦等。 \n \n \n 63. 是否試過修改 youBot 或 stand 機構的質量或摩擦係數嗎？如何修改？ \n \n \n 可在 physics 區塊中修改 mass 與 friction 參數，也能改關節 motor 的力量限制。 \n \n \n 64. 若要限制 youBot 只能於指定區域活動，如何於控制器實作？ \n \n \n 用 GPS 或 Supervisor 監測位置，若超出範圍即停止或強制移回合法區域。 \n \n \n 65. 該如何設定並驗證 youBot 的初始朝向與旋轉角度？ \n \n \n 設定 rotation 為 [0 1 0 θ]，θ 為朝向角；於 controller 印出 IMU yaw 值確認是否正確。 \n \n \n 66. 場景中籃框（stand）如何設定隨機移動的範圍與方向？ \n \n \n 控制器中設定座標邊界，如 x ∈ [1,2]，y 固定或微調，隨機選新目標並逐步移動。 \n \n \n 67. 你試著讓投籃輪車自動對準並靠近籃框嗎？程式邏輯是什麼？ \n \n \n 使用 GPS 取得自身與籃框位置→計算向量與角度→先旋轉對準→再前進靠近。 \n \n \n 68. 當投球未命中籃框時，如何於程式中記錄「未得分」？ \n \n \n 加上 timeout 或判斷感測器未觸發即可視為未得分，變數統計 miss_count += 1。 \n \n \n 69. 你曾經手動重置全部籃球的位置嗎？操作流程為何？ \n \n \n 於 .wbt 或 Supervisor 中重設球體位置 translation，或刪除再新增所有球體。 \n \n \n 70. 你是否嘗試過將記分板顯示改為兩位數或四位數？如何調整？ \n \n \n 於場景中加入更多七段元件→分別控制每一位→程式將分數拆解為個位、十位…後分別顯示。 \n \n \n 71. 如何讓記分板在遊戲結束後自動顯示「Game Over」或其他訊息？ \n \n \n 可加上 text overlay 或切換顯示器 segment 為特定組合代表 G A M E O V E R（需自設字元對應）。 \n \n \n 72. 你是否有針對球體數量不足時自動補球？程式如何設計？ \n \n \n 控制器內設定球量變數；每次投籃減少，低於下限時傳訊息啟動補球控制器補球。 \n \n \n 73. 如何於控制器中實現「投球冷卻時間」以防止連續發射？ \n \n \n 使用 time.time() 記錄上次發射時間，設定 cooldown 間隔，不滿足條件時禁止觸發投球動作。 \n \n \n 74. 你能否讀取與顯示 youBot 的即時速度或移動路徑？ \n \n \n 可透過連續讀取 GPS 位置，計算位移除以時間獲得速度，或繪製路徑記錄至陣列中。 \n \n \n 75. 你有測試過將投籃流程的控制訊息以文字訊息（如LOG）即時顯示在終端機嗎？ \n \n \n 有，使用 print() 於 controller 內即時輸出當前狀態，如「投籃中」「補球完成」等文字。 \n \n \n 76. 場景中的 DistanceSensor 如何設定量測距離與靈敏度？ \n \n \n 在 DistanceSensor 設定 lookupTable 與 maxRange，並調整 timestep 取得更即時的數值變化。 \n \n \n 77. 是否有令籃框架進行非線性或加速度運動？如何實作？ \n \n \n 可使用二次函數或三角函數設定位置變化曲線，或加入加速度控制函式模擬實際加減速。 \n \n \n 78. 如何將 youBot 移動與投籃流程整合成一個自動化測試腳本？ \n \n \n 寫成有限狀態機 FSM：移動→投籃→計分→冷卻→回到起點→重複流程，完成自動化測試。 \n \n \n 79. 是否試過在同一場景下同時建立兩個以上的計分板嗎？操作方式為何？ \n \n \n 可建立兩組七段顯示器，個別命名與控制，每組分別接收各自的記分訊息並顯示。 \n \n \n 80. 如何於 Webots 場景中加入倒數計時器或遊戲計時功能？ \n \n \n 於控制器中計算模擬運行時間 (getTime()) 與上限比較，並用文字顯示於畫面。 \n \n \n 81. 能否於程式中偵測 youBot 是否卡住或發生碰撞？如何處理？ \n \n \n 偵測方式： \n \n \n \n 速度長時間接近 0 \n \n \n 加速度感測器/IMU 變化異常 \n \n \n 可觸發避障程序或重定位 \n \n \n \n 82. 當有多台 youBot 輪車時，如何區分各自的控制與訊息通道？ \n \n \n 使用不同控制器與 Emitter/Receiver 設定 channel 為不同數字，並加入識別代碼。 \n \n \n 83. 若希望將補球機構設計為「多點補球」，該如何設計？ \n \n \n 設置多個補球裝置，每個對應一個 youBot 偵測點，利用分區訊息判別是哪個車請求球。 \n \n \n 84. 是否測試過不同籃球質量對投籃飛行軌跡的影響？結果如何？ \n \n \n 質量增加→較不易受風或摩擦影響；質量太小會導致彈跳過度、軌跡不穩。需平衡設計。 \n \n \n 85. 如何於模擬中手動或自動錄製並回放投籃過程？ \n \n \n 使用 Webots 內建錄影功能（視窗上方相機圖示）或自動控制下錄製 .mp4 或輸出 log 分析。 \n \n \n 86. 是否能於控制器程式內同時整合多種鍵盤/滑鼠/自動控制模式？ \n \n \n 可以，程式中加入模式切換變數（如手動、自動），再依該模式執行對應邏輯。 \n \n \n 87. 若曾遇到過場景載入出現 mesh 檔案遺失或錯誤，該如何排除？ \n \n \n 檢查引用路徑是否正確、確保 protos 或 meshes 檔案存在；如引用到相對路徑錯誤需修正。 \n \n \n 88. 是否於專案過程中建立過專屬的 proto 或自訂場景物件？如何設計？ \n \n \n 有，自建 myThrower.proto → 寫入物件結構 → 引入關節與 motor 參數 → 在場景中插入使用。 \n \n \n 89. 如何批次測試多種投籃參數（如角度、力度）並記錄結果？ \n \n \n 撰寫迴圈測試腳本：依角度與力度範圍組合進行模擬 → 記錄得分與命中率。 \n \n \n 90. 當 Webots 更新版本或變更 API，該如何維護與修正原有專案？ \n \n \n 參閱 Webots 更新紀錄 → 檢查 deprecated API → 測試原控制器 → 修改不相容部分或替代函式。 \n \n \n \n', 'tags': '', 'url': 'Final_question.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};